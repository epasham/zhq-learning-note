=============             Spring  拦截器            =======================
在SpringMVC 中定义一个Interceptor是比较非常简单，主要有两种方式：
第一种：实现HandlerInterceptor 接口，或者是继承实现了HandlerInterceptor 接口的类，例如HandlerInterceptorAdapter；
第二种：实现Spring的WebRequestInterceptor接口，或者是继承实现了WebRequestInterceptor的类。
现在主要结合一个例子说一下第一种方式：实现HandlerInterceptor接口。
HandlerInterceptor接口主要定义了三个方法：
1. boolean preHandle (HttpServletRequest request, HttpServletResponse response, Object handle)方法：
该方法将在请求处理之前进行调用，只有该方法返回true，才会继续执行后续的Interceptor和Controller，
当返回值为true 时就会继续调用下一个Interceptor的preHandle 方法，如果已经是最后一个Interceptor的时候
就会是调用当前请求的Controller方法；
2.void postHandle (HttpServletRequest request, HttpServletResponse response, Object handle,
ModelAndView modelAndView)方法：该方法将在请求处理之后，DispatcherServlet进行视图返回渲染之前进行调用，
可以在这个方法中对Controller 处理之后的ModelAndView 对象进行操作。
3.void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handle, Exception ex)方法：该方法也是需要当前对应的Interceptor的preHandle方法的返回值为true时才会执行，该方法将在整个请求结束之后，也就是在DispatcherServlet 渲染了对应的视图之后执行。用于进行资源清理。
