一、Windows 环境变量
　　1、在Windows 系统下，很多软件安装都需要配置环境变量，比如 安装 jdk ，如果不配置环境变量，
在非软件安装的目录下运行javac 命令，将会报告找不到文件，类似的错误。
　　2、那么什么是环境变量？简单说，就是指定一个目录，运行软件的时候，相关的程序将会按照该目录寻找相关文件。
 设置变量对于一般人最实用的功能就是： 不用拷贝某些dll文件到系统目录中了，而path 这一系统变量就是系统搜索dll文件的一系列路径
　　3、在Linux系统下，如果你下载并安装应用程序，很有可能在键入它的名称的时候出现 “command  not found ” 的提示内容。
如果每次都到安装目录文件夹内，找到可执行文件来进行操作就太繁琐了。
这涉及到环境变量path的设置问题，而Path 的设置也是在Linux下定制环境变量的一个组成部分。
二、Linux 环境变量（export命令）
环境变量启动过程：
功能说明：
　　设置或显示环境变量。（比如我们要用一个命令，但这个命令的执行文件不在当前目录，这样我们每次用的时候必须指定执行文件的目录，麻烦，在代码中先执行export，这个相当于告诉程序，执行某某东西时，需要的文件或什么东东在这些目录里）

语　　法：export [-fnp][变量名称]=[变量设置值]
补充说明：在shell中执行程序时，shell会提供一组环境变量。 export可新增，修改或删除环境变量，供后续执行的程序使用。export的效力仅及于该此登陆操作。

参　　数：
  -f 　代表[变量名称]中为函数名称。
　-n 　删除指定的变量。变量实际上并未删除，只是不会输出到后续指令的执行环境中。
　-p 　列出所有的shell赋予程序的环境变量。
　　一个变量创建时，它不会自动地为在它之后创建的shell进程所知。而命令export可以向后面的shell传递变量的值。
当一个shell脚本调用并执行时，它不会自动得到原为脚本（调用者）里定义的变量的访问权，除非这些变量已经被显式地设置为可用。
export命令可以用于传递一个或多个变量的值到任何后继脚本。     ----《UNIX教程》

　　 一般来说，配置交叉编译工具链的时候需要指定编译工具的路径，此时就需要设置环境变量。
例如我的mips-linux-gcc编译器在“/opt/au1200_rm /build_tools/bin”目录下，build_tools就是我的编译工具，则有如下三种方法来设置环境变量：

1、直接用export命令：
#export PATH=$PATH:/opt/au1200_rm/build_tools/bin

查看是否已经设好，可用命令export查看：

2、修改profile文件：
#vi /etc/profile
在里面加入:
export PATH="$PATH:/opt/au1200_rm/build_tools/bin"

3. 修改.bashrc文件：

# vi /root/.bashrc
在里面加入：
export PATH="$PATH:/opt/au1200_rm/build_tools/bin"
后两种方法一般需要重新注销系统才能生效，最后可以通过echo命令测试一下：
# echo $PATH


看看输出里面是不是已经有了 /my_new_path这个路径了。

　　“/bin”、“/sbin”、“/usr/bin”、“/usr/sbin”、“/usr/local/bin”等路径已经在系统环境变量中了，如果可执行文件在这几个标准位置，在终端命令行输入该软件可执行文件的文件名和参数(如果需要参数)，回车即可。 　　

　　如果不在标准位置，文件名前面需要加上完整的路径。不过每次都这样跑就太麻烦了，一个“一劳永逸”的办法是把这个路径加入环境变量。命令 “PATH=$PATH:路径”可以把这个路径加入环境变量，但是退出这个命令行就失效了。要想永久生效，需要把这行添加到环境变量文件里。有两个文件可 选：“/etc/profile”和用户主目录下的“.bash_profile”，“/etc/profile”对系统里所有用户都有效，用户主目录下 的“.bash_profile”只对这个用户有效。 　　

　　“PATH=PATH:路径1:路径2:...:路径n”，意思是可执行文件的路径包括原先设定的路径，也包括从“路径1”到“路径n”的所有路径。
当用户输入一个一串字符并按回车后，shell会依次在这些路径里找对应的可执行文件并交给系统核心执行。
那个“PATH:路径1:路径2:...:路径n”，意思是可执行文件的路径包括原先设定的路径，
也包括从“路径1”到“路径n”的所有路径。当用户输入一个一串字符并按回车后，
shell会依次在这些路径里找对应的可执行文件并交给系统核心执行。
那个“PATH”表示原先设定的路径 仍然有效，注意不要漏掉。某些软件可能还有“PATH”以外类型的环境变量需要添加，但方法与此相同，并且也需要注意“$”。 　　

注意，与DOS/Window不同，UNIX类系统环境变量中路径名用冒号分隔，不是分号。


PATH=$PATH:路径1:路径2:...:路径n 　　

其他环境变量=$其他环境变量:... 　　

在“profile”和“.bash_profile”中，“#”是注释符号，写在这里除了视觉分隔外没有任何效果。 　　

设置完毕，注销并重新登录，设置就生效了。如果不注销，直接在shell里执行这些语句，也能生效，但是作用范围只限于执行了这些语句的shell。 　　
相关的环境变量生效后，就不必老跑到软件的可执行文件目录里去操作了。
$PATH：决定了shell将到哪些目录中寻找命令或程序，PATH的值是一系列目录，当您运行一个程序时，Linux在这些目录下进行搜寻编译链接。

　　编辑你的 PATH 声明，其格式为：

　　PATH=$PATH:<PATH 1>:<PATH 2>:<PATH 3>:------:<PATH N>

你可以自己加上指定的路径，中间用冒号隔开。环境变量更改后，在用户下次登陆时生效，
如果想立刻生效，则可执行下面的语句：$ source .bash_profile
