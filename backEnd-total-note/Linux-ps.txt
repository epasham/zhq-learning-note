ps命令能够给出当前系统中进程的快照。它能捕获系统在某一事件的进程状态。

UNIX 风格，选项可以组合在一起，并且选项前必须有“-”连字符
BSD 风格，选项可以组合在一起，但是选项前不能有“-”连字符
GNU 风格的长选项，选项前有两个“-”连字符


1. 不加参数执行ps命令

    PID: 运行着的命令(CMD)的进程编号
    TTY: 命令所运行的位置（终端）
    TIME: 运行着的该命令所占用的CPU处理时间
    CMD: 该进程所运行的命令

2. 显示所有当前进程
使用 -a 参数。-a 代表 all。同时加上x参数会显示没有控制终端的进程。
ps -ax
ps -ax | less

3. 根据用户过滤进程
在需要查看特定用户进程的情况下，我们可以使用 -u 参数。比如我们要查看用户'pungki'的进程，可以通过下面的命令：
$ ps -u pungki

4. 通过cpu和内存使用来过滤进程
也许你希望把结果按照 CPU 或者内存用量来筛选，这样你就找到哪个进程占用了你的资源。要做到这一点，我们可以使用 aux 参数，来显示全面的信息:
$ ps -aux | less
默认的结果集是未排好序的。可以通过 --sort命令来排序。
根据 CPU 使用来升序排序
$ ps -aux --sort -pcpu | less
根据 内存使用 来升序排序
$ ps -aux --sort -pmem | less
我们也可以将它们合并到一个命令，并通过管道显示前10个结果：
ps -aux --sort -pcpu,+pmem | head -n 10


5. 通过进程名和PID过滤
使用 -C 参数，后面跟你要找的进程的名字。比如想显示一个名为getty的进程的信息，就可以使用下面的命令：
$ ps -C getty
如果想要看到更多的细节，我们可以使用-f参数来查看格式化的信息列表：
$ ps -f -C getty

6. 根据线程来过滤进程
如果我们想知道特定进程的线程，可以使用-L 参数，后面加上特定的PID。
$ ps -L 1213

7. 树形显示进程
有时候我们希望以树形结构显示进程，可以使用 -axjf 参数。
$ps -axjf

8. 显示安全信息
$ ps -eo pid,user,args
参数 -e 显示所有进程信息，-o 参数控制输出。Pid,User 和 Args参数显示PID，运行应用的用户和该应用。

9. 格式化输出root用户（真实的或有效的UID）创建的进程
系统管理员想要查看由root用户运行的进程和这个进程的其他相关信息时，可以通过下面的命令:
$ ps -U root -u root u
-U 参数按真实用户ID(RUID)筛选进程，它会从用户列表中选择真实用户名或 ID。真实用户即实际创建该进程的用户。
-u 参数用来筛选有效用户ID（EUID）。
最后的u参数用来决定以针对用户的格式输出，由User, PID, %CPU, %MEM, VSZ, RSS, TTY, STAT, START, TIME 和 COMMAND这几列组成。


10. 使用PS实时监控进程状态
ps 命令会显示你系统当前的进程状态，但是这个结果是静态的。
当有一种情况，我们需要像上面第四点中提到的通过CPU和内存的使用率来筛选进程，并且我们希望结果能够每秒刷新一次。为此，我们可以将ps命令和watch命令结合起来。
$ watch -n 1 ‘ps -aux --sort -pmem, -pcpu’

通过 man ps来查看更多的参数。（LCTT 译注：由于 ps 命令古老而重要，所以它在
不同的 UNIX、BSD、Linux 等系统中的参数不尽相同，因此如果你用的不是 Linux 系统，请查阅你的文档了解具体可用的参数。）
