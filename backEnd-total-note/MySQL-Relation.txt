========================   数据库关系操作   =================================

CREATE TABLE IF NOT EXISTS `class`(
   `runoob_id` INT UNSIGNED AUTO_INCREMENT,
   `runoob_title` VARCHAR(100) NOT NULL,
   `runoob_author` VARCHAR(40) NOT NULL,
   `submission_date` DATE,
   PRIMARY KEY ( `runoob_id` )
)ENGINE=InnoDB DEFAULT CHARSET=utf8;

============================     使用实例      ===============================
（1）一对多
学生表要关联班级表,多个学生属于一个班级. 班级是被关联的表.
drop table class;
create table if not exists class(
id int primary key auto_increment,
caption  char(20)
);
insert into class(caption) values('三年二班'),('一年三班'),('三年一班');

drop table student;
create table if not exists student (
  id int primary key auto_increment,
  name varchar(20),
  sex enum('male','famale') default 'male',
  class_id int,
  foreign key(class_id) references class(id)
);
insert into student(name,class_id) values ('钢弹',1),('铁锤',1),('山炮',2);

（2）一对一
删除带有外键的表
SET FOREIGN_KEY_CHECKS = 0;
示例操作代码
create table if not exists teacher(
  id int primary key auto_increment,
  name varchar(20)
);
insert into teacher(name) value('ff'),('ff1'),('ff2');

create table if not exists course (
  id int primary key auto_increment,
  name varchar(20),
  teacher_id int unique,
  foreign key(teacher_id) references teacher(id)
  on delete cascade
  on update cascade
);
insert into course(teacher_id,name) value(2,'ee'),(1,'ee1'),(3,'ee2');
测试命令
delete from  teacher where  id=1;



(3)一对多     失败的代码==============================
drop table class;
create table if not exists class(
  id int primary key auto_increment,
  caption  char(20)
);
insert into class(caption) values('三年二班'),('一年三班'),('三年一班');

drop table student;
create table if not exists student (
  id int primary key auto_increment,
  name varchar(20),
  sex enum('male','female') default 'male',
  class_id int,
  foreign key(class_id) references class(id)
  on delete cascade
  on update cascade
);
insert into student(name,class_id) values ('钢弹',1),('铁锤',1),('山炮',2);

delete from  class where  id=1;
