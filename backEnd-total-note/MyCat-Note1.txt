构建用户画像：打点（埋点）  监听页面的停留时间
QPS 每秒处理（读）
MySQL单表性能： 1000W 以上优化，1500W 之后性能急剧下降
查历史记录查不到太远，因为历史数据已经被存档了，库里并没有

数据分表：添加一个路由规则，相当于在数据库层面做了负载均衡
优化一亿的  用户表  数据表思路：
（1）优化磁盘的占用空间
（2）优化查询效率
要求：
（1）用户角度快速查询订单
（2）商户角度快速查询用户
订单查用户，用户查订单，可以建立二者之间的关系表，但是存在一些问题。
为了提高查询的效率，可以将同样的数据保存两份，根据两个不同的维度进行分表，另一份通过binlog进行维护。
是会造成数据冗余，可以以空间换时间

过滤系统：用户写入的评论不能直接显示，根据questionId进行分表。

binlog：

建表三件套 primary key id, addtime, updatetime
如果用自增的主键作为userId,则可以通过爬虫探取到用户规模
分布式ID生成规则：有许多
snowflake、redis、数据库、mongodb、zookeeper、UUID等
snowflake算法可以根据自身项目的需要进行一定的修改。比如估算未来的数据中心个数，每个数据中心的机器数以及统一毫秒可以能的并发数来调整在算法中所需要的bit数。
优点：
1）不依赖于数据库，灵活方便，且性能优于数据库。
2）ID按照时间在单机上是递增的。
缺点：
1）在单机上是递增的，但是由于涉及到分布式环境，每台机器上的时钟不可能完全同步，也许有时候也会出现不是全局递增的情况。


MyCat  阿里巴巴插件
mycat类似于一个代理，连接多个mysql库，将一条sql解析，确定访问哪一个数据库和数据表
核心功能：分库、分表、读写分离、全局序号

分库：一张表分散到不同的库中
分表：一个库中有多个表的备份  tableXX1  tableXX2 tableXX3
mycat 和 shradingJDBC 的区别    没有最好的架构，只有最合适的
由DBA负责维护 mycat服务
shradingJDBC  直接写到代码里，对于维护的成本比较小

通过mycat 登录到mysql数据库
mysql -h127.0.0.1 -p8066 -utest -ptest -TESTDB

mycat不影响正常的sql逻辑
server.xml  schema.xml  rule.xml  三个配置文件


QPS  读、写、删除
cellar  tair前身

自动化运维平台
大规模分布式缓存服务 Tair 模块  集合了redis  memccache  levelDB 的中间件，
